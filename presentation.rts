:data-transition-duration: 2000
:skip-help: true
:css: presentation.css
:data-x: r1200

.. title: All'ombra del Leviatano

----

Sabato 24 Ottobre

#LDROMA15
---------

http://lug.uniroma2.it/ld15/

----

All'ombra del Leviatano
=======================

----

http://linux-day-2015.github.io/

----

File e filesystem
=================

----

	Die Dataien hat der liebe Gott gemacht, alles andere ist Menschenwerk.

	-- Leopold Kronecker (apocrifo)

----

*file* is the new *byte*

----

	All files are created equal.

	-- Anonimo

----

	Everything is a file.

	-- Anonimo

----

	All file systems are not created equal.

	-- 11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 14)

----

Fondazioni
==========

----

	For most users, the filesystem is *the most visible aspect of an operating system*.

	-- Silberschatz & Galvin, Operating System Concepts, 7th ed.

----

	The filesystem consists of two distinct parts: a *collection of files*, each storing related data, and a *directory structure*, which organizes and provides information about all the files in the system.

	-- Silberschatz & Galvin, Operating System Concepts, 7th ed.

----

	The most important job of UNIX is to provide a filesystem.

	-- Ritchie & Thompson, The UNIX TimeSharing System

----

	A file contains whatever information the user places on it, for example symbolic or binary (object) programs.

	*No particular structuring is expected by the system.*

	-- Ritchie & Thompson, The UNIX TimeSharing System

----

	A file does not exist within a particular directory; the directory entry for a file consists merely of its name and a pointer to the information actually describing the file.

	-- Ritchie & Thompson, The UNIX TimeSharing System

----

	There is a threefold advantage in treating I/O devices this way: file and device I/O are as similar as possible; file and device names have the same syntax and meaning, so that a program expecting a file name as a parameter can be passed a device name; finally, special files are subject to the same protection mechanism as regular files.

	-- Ritchie & Thompson, The UNIX TimeSharing System

----

	Perhaps paradoxically, the success of UNIX is largely due to the fact that it was not designed to meet any predefined objectives.

	-- Ritchie & Thompson, The UNIX TimeSharing System

----

Precisazioni
============

----

	The whole point with "everything is a file" is not that you have some random filename, but the fact that *you can use common tools to operate on different things*.

	-- Linux Torvalds, 8 giugno 2002

----

	The UNIX philosophy is often quoted as "everything is a file", but that really means *everything is a stream of bytes*.

	-- Linux Torvalds, 8 marzo 2007

----

	It should be just a "read()", and then *people can use general libraries and treat all sources the same*.

	-- Linux Torvalds, 8 marzo 2007

----

Il paradosso
============

----

everything is a file

*ma*

il perimetro di cosa è un file non è flessible ad libitum

----

il perimetro di cosa è un file è

*fissato dal kernel*

----

la *sintassi* e la *semantica* del filesystem sono fissate dal kernel

----

Il Leviatano
============

----


	VFS: oltre 65 mila righe di codice già nel 2008

	-- Galloway et al., Model-Checking the Linux Virtual File System

----

	approccio conservativo

	kernel-centrico

----

	debug difficile

----

	l'utente non amministratore semplicemente *non può*

----

	ecce spes eius frustrabitur eum et videntibus cunctis praecipitabitur

	-- Iob, 41, 1

----

VFS
===

----

Astrazione

	File: modello comune

	Strutture dati: superblock, inode, file, dentry

	Operazioni

	Object-oriented

----

Implementazione

	Disk data structures

	Memory data structures

	Disk space management

----

Precursori

	Earlier VFS implementations include Sun's VFS (in SunOS version 2.0, circa 1985) and IBM and Microsoft's "Installable File System" for IBM OS/2.

	-- M. Tim Jones, Anatomy of the Linux virtual filesystem switch

----

Altre strade
============

----

Synthetic Files

----

*9P*: Plan 9 Filesystem Protocol

----

*puffs*: Pass-to-Userspace Framework File System su NetBSD

----

	A filesystem is a protocol translator: it interprets incoming requests and transforms them into a form suitable to store and retrieve data.

	-- Antti Kantee, Send and Receive of File System Protocols

----


Hurd translators
================

----

	A translator is simply a normal program acting as an object server and participating in the Hurd's distributed virtual filesystem.

	-- https://www.gnu.org/software/hurd/hurd/translator.html

----

	It is so-called because it typically exports a filesystem (although need not: cf. auth, proc and pfinet) and thus translates object invocations into calls appropriate for the backing store (e.g., ext2 filesystem, nfs server, etc.).

	-- https://www.gnu.org/software/hurd/hurd/translator.html

----

	Another way of putting it is that it translates from one representation of a data structure into another representation, for example from the on-disk ext2 data layout to a traditional filesystem hierarchy, or from a XML file to a virtual hierarchical manifestation.

	-- https://www.gnu.org/software/hurd/hurd/translator.html

----

	A translator is usually registered with a specific filesystem node by using the settrans command.

	-- https://www.gnu.org/software/hurd/hurd/translator.html

----

	Translators do not require any special privilege to run. The privilege they require is simply that to access the indiviudal resources they use.

	-- https://www.gnu.org/software/hurd/hurd/translator.html

----

FUSE
====

Filesystem in Userspace
------------------------

----

.. image:: images/fuse_structure.png

----

	With FUSE it is possible to implement a fully functional filesystem in a userspace program. 

	-- http://fuse.sourceforge.net/

----

Autore Miklos Szeredi

Licenze GPL + LGPL

----

Features include...

----

	simple library API

----

	simple installation (no need to patch or recompile the kernel)

----

	secure implementation

----

	userspace-kernel interface is very efficient

----

	usable by non privileged users

	-- http://fuse.sourceforge.net/

----

Interazione attraverso un file (ancora!): */dev/fuse*.

----

	FUSE is a userspace filesystem framework.  It consists of a kernel module (fuse.ko), a userspace library (libfuse.*) and a mount utility (fusermount).

	-- http://fuse.sourceforge.net/doxygen/index.html

----

	One of the most important features of FUSE is allowing secure, non-privileged mounts.  This opens up new possibilities for the use of filesystems.  A good example is sshfs: a secure network filesystem using the sftp protocol.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

	Since the mount() system call is a privileged operation, a helper program (fusermount) is needed, which is installed setuid root.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Vocabolario
===========

----

Userspace filesystem

	A filesystem in which data and metadata are provided by an ordinary userspace process.  The filesystem can be accessed normally through the kernel interface.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Filesystem daemon

	The process(es) providing the data and metadata of the filesystem.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Non-privileged mount (or user mount)

	A userspace filesystem mounted by a non-privileged (non-root) user.  The filesystem daemon is running with the privileges of the mounting user.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Filesystem connection

	A connection between the filesystem daemon and the kernel.  The connection exists until either the daemon dies, or the filesystem is umounted.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Mount owner

	The user who does the mounting.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

User

	The user who is performing filesystem operations.

	-- http://fuse.sourceforge.net/doxygen/index.html

----

Bestiario
=========

----

PNGdrive

	PNG meets Steganography meets Fuse: the easiest way to have plausible deniability.

	-- https://code.google.com/p/pngdrive/

----

GlusterFS

	GlusterFS is a scalable network filesystem.  Using common off-the-shelf hardware, you can create large, distributed storage solutions for media streaming, data analysis, and other data- and bandwidth-intensive tasks.

	-- http://www.gluster.org/

----

WikipediaFS

	WikipediaFS is a virtual filesystem which allows users to view and edit Wikipedia articles as if they were real files on a local disk drive. 

	-- https://en.wikipedia.org/wiki/WikipediaFS

----

Couchfuse

	Couchfuse is a FUSE filesystem that exposes Couchdb databases as filesystem folder.

	-- http://narkisr.github.io/couch-fuse/

----

CephFS

	FUSE come *vivaio*, come *coltura* di giovani filesystem.

	CephFS è nel kernel dalla versione 2.6.34.

----

Incarnazioni
============

----

GO-FUSE

	As fast as libfuse using the gc compiler for single threaded loads.

	-- https://github.com/hanwen/go-fuse

----

Fuse4js

	Fuse4js currently implements a subset of all FUSE file operations.

	-- https://github.com/bcle/fuse4js

----

fusepy

	Simple ctypes bindings for FUSE.

	-- https://github.com/linux-day-2015/fusepy

----

Mani in pasta
=============

----

elfs

	A simple (FUSE) filesystem on top of ELF objects.

	-- https://github.com/linux-day-2015/elfs

----

::

	$ elfs `which fdup` /tmp/elf

	$ ls -l /tmp/elf/
	total 0
	drw-r--r-- 1 root root 0 Jan  1  1970 header
	drw-r--r-- 1 root root 0 Jan  1  1970 libs
	drw-r--r-- 1 root root 0 Jan  1  1970 sections

----

Prospettive

	estensione ad altri formati binari

	astrazione dal formato

	interfaccia verso `exec()`

----

factors: un divertissement

	Ammette solo, come nomi di cartelle, *numeri interi*, e le popola di file pari ai *fattori*.

	Costruito su fusepy.

	https://github.com/linux-day-2015/fusepy/blob/master/examples/factors.py

----

::

	$ mkdir /tmp/loopback /tmp/mountpoint
	$ sudo ./factors.py /tmp/loopback /tmp/mountpoint &
	$ sudo mkdir /tmp/mountpoint/54334
	$ ls /tmp/mountpoint/54334
	1  14  2  27167  3881  54334  7  7762

----

etcdfs

	A replicated filesystem on top of etcd.

	Progetto appena nato.  *Stay tuned...*

	https://github.com/linux-day-2015/etcdfs

----

Colofóne
========

Presentazione composta con vim e Hovercraft! su Ubuntu Saucy.

Featuring Google Fonts: Libre Baskerville, Racing Sans One, Satisfy.

----

exit()
======

----

Roberto Reale

http://linux-day-2015.github.io/

